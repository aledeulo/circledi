version: 2.1

jobs:

  print-pipeline-info:
    docker: 
      - image: circleci/node:latest
    steps:
      - run: echo "Pipeline Id:<< pipeline.id >>"
      - run: echo "Pipeline Number:<< pipeline.number >>"
      - run: echo "Pipeline Git project url:<< pipeline.project.git_url >>"
      - run: echo "Pipeline Project type:<< pipeline.project.git_url >>"
      - run: echo "Pipeline Git branch:<< pipeline.git.branch >>"

  print-hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello"
  

  print-world:
    docker: 
      - image: circleci/node:latest    
    steps:
      - checkout
      - run:
          name: "Say World"
          command: "echo World Mr. $MY_NAME_IN_ENV_VAR"

# Add two jobs, first one creates and persist output.txt file into the workspace which will be attaced to job number two to use output.txt file
  save_hello_world_output:
    docker: 
      - image: circleci/alpine:latest
    steps:
      - checkout
      - run: 
          name: "Create a share file for second job"
          command: "echo 'text to output here.' > output.txt"
      - persist_to_workspace:
          root: /tmp/circleci_workspace_<< pipeline.number >>
          paths:
            - ./output.txt

  print_output_file:
    docker: 
      - image: circleci/alpine:latest
    steps:
      - checkout        
      - attach_workspace:
          at: /tmp/circleci_workspace_<< pipeline.number >>
      - run:
          name: "Read and print from workspace"
          command: |
              "cat output.txt"


# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    jobs:
      - print-pipeline-info
      - print-hello
      - print-world:
          requires: 
            - print-hello

  share_output_file:
    jobs:
      - save_hello_world_output
      - print_output_file:
          requires:
            - save_hello_world_output